cloglog <- glm(Class ~ .,
family=binomial(link='cloglog'),
data = dados)
cauchit <- glm(Class ~ .,
family=binomial(link='cauchit'),
data = dados)
logit
logit
selec <-
data.frame(ajuste=c('logito', 'probito', 'cloglog', 'cauchy'),
aic=c(AIC(logit), AIC(probit),
AIC(cloglog), AIC(cauchit)),
logLik=c(logLik(logit),logLik(probit),
logLik(cloglog),logLik(cauchit)))
selec
# Análise do modelo ajustado selecionado
summary(probit)
# Análise do modelo ajustado selecionado
summary(probit)
# Reajuste do Modelo
probit2 <- step(probit, direction = "both")
summary(probit2)
anova(probit, probit2, test = 'Chisq')
library(statmod)
par(mfrow=c(1,2))
residuos <- qresiduals(probit)
plot(residuos)
qqnorm(residuos)
qqline(residuos, col = 2)
hist(residuos)
# Predição
perfis <- data.frame(Adhes = c(6,  3),
BNucl = c(9,  1),
Chrom = c(3,  7),
Mitos = c(9,  1),
NNucl = c(8,  3),
Thick = c(2,  4),
UShap = c(6,  5)
)
predict(probit2,
interval = 'prediction',
newdata = perfis,
type = 'response')
ipardes  <- read.csv2('https://raw.githubusercontent.com/lineu96/glm/master/consulta.csv',
header = T, sep = ';', dec = ',')
View(ipardes)
library(psych)
pairs.panels(ipardes[ , 2:7],
method = "pearson",
hist.col = 2,
density = TRUE,
ellipses = FALSE,
pch = 20,
lwd = 0.01
)
## Transformando as variáveis explicativas
ipardes$lpibpc <- log(ipardes$pibpc)
ipardes$later  <- log(ipardes$ater)
ipardes$lgurb <- log(ipardes$gurb)
ipardes$lfrvei <- log(ipardes$frvei)
ipardes$lpop   <- log(ipardes$pop)
pairs.panels(ipardes[ , c(2,8:12)],
method = "pearson",
hist.col = 2,
density = TRUE,
ellipses = FALSE,
pch = 20,
lwd = 0.01
)
library(MASS)
pois <- glm(actt ~ pibpc + ater + gurb + frvei + pop,
data = ipardes, family = 'poisson')
bin_neg <- glm.nb(actt ~ pibpc + ater + gurb + frvei + pop,
data = ipardes)
pois2 <- glm(actt ~ lpibpc + later + lgurb + lfrvei + lpop,
data = ipardes, family = 'poisson')
bin_neg2 <- glm.nb(actt ~ lpibpc + later + lgurb + lfrvei + lpop,
data = ipardes)
ajuste <- c('Poisson', 'Binomial Negativa',
'Poisson 2', 'Binomial Negativa 2')
aic <- c(AIC(pois),
AIC(bin_neg),
AIC(pois2),
AIC(bin_neg2))
verossimilhanca <- c(logLik(pois),
logLik(bin_neg),
logLik(pois2),
logLik(bin_neg2))
data.frame(ajuste, aic, verossimilhanca)
ajuste <- c('Poisson', 'Binomial Negativa',
'Poisson 2', 'Binomial Negativa 2')
aic <- c(AIC(pois),
AIC(bin_neg),
AIC(pois2),
AIC(bin_neg2))
verossimilhanca <- c(logLik(pois),
logLik(bin_neg),
logLik(pois2),
logLik(bin_neg2))
data.frame(ajuste, aic, verossimilhanca)
summary(bin_neg2)
# Reajustando o modelo
bin_neg2_step <- step(bin_neg2, direction = "both")
summary(bin_neg2_step)
summary(bin_neg2_step)
anova(bin_neg2, bin_neg2_step, test = 'Chisq')
library(statmod)
par(mfrow=c(1,2))
res <- qresiduals(bin_neg2_step)
plot(res)
residuos <- qresiduals(bin_neg2_step)
qqnorm(residuos)
qqline(residuos, col = 2)
perfis <- data.frame(lpibpc =  log(c(6500, 13000, 16000)),
lgurb =  log(c(10, 75, 84)),
lfrvei =  log(c(400,  3500,  7000)),
lpop =  log(c(1500, 9000, 17000)))
perfis
predict(bin_neg2_step,
interval = 'prediction',
newdata = perfis,
type = 'response')
r=mean(c(0,0,1.03,8.91,6.94,0,9.5))
r
mean(p1,p2,p3,r)
p1=0
p2=7.8
p3=9.3
p4=0
r=mean(c(0,0,1.03,8.91,6.94,0,9.5))
mean(p1,p2,p3,r)
mean(c(p1,p2,p3,r))
p1=10
p2=7.8
p3=9.3
p4=0
r=mean(c(0,0,1.03,8.91,6.94,0,9.5))
mean(c(p1,p2,p3,r))
p1=8
p2=7.8
p3=9.3
p4=0
r=mean(c(0,0,1.03,8.91,6.94,0,9.5))
mean(c(p1,p2,p3,r))
p1=7
p2=7.8
p3=9.3
p4=0
r=mean(c(0,0,1.03,8.91,6.94,0,9.5))
mean(c(p1,p2,p3,r))
p1=7.1
p2=7.8
p3=9.3
p4=0
r=mean(c(0,0,1.03,8.91,6.94,0,9.5))
mean(c(p1,p2,p3,r))
p1=7.2
p2=7.8
p3=9.3
p4=0
r=mean(c(0,0,1.03,8.91,6.94,0,9.5))
mean(c(p1,p2,p3,r))
p1=7.15
p2=7.8
p3=9.3
p4=0
r=mean(c(0,0,1.03,8.91,6.94,0,9.5))
mean(c(p1,p2,p3,r))
p1=7.13
p2=7.8
p3=9.3
p4=0
r=mean(c(0,0,1.03,8.91,6.94,0,9.5))
mean(c(p1,p2,p3,r))
p1=7.14
p2=7.8
p3=9.3
p4=0
r=mean(c(0,0,1.03,8.91,6.94,0,9.5))
mean(c(p1,p2,p3,r))
71*3
mean(c(p1,p2,p3,r))
p1=10
p2=7.8
p3=9.3
p4=0
r=mean(c(0,0,1.03,8.91,6.94,0,9.5))
mean(c(p1,p2,p3,r))
4500 + (0.52*4500)
4500 + (0.52*4500) + 1000
6000+2000
4556.92 + 1000 + 1594.922
4556.92 + 1000 + 2369.598
mean(c(4700,
5300,
6000,
7300,
7400))
23-5
4556.92*0.52
4556.92*0.30
4556.92*0.35
4556.92 + 1000 + 1594.922
4556.92 + 1000 + 2369.598
mean(c(4700,
5300,
6000,
7300,
7400))
25/65
c(25,18,22)/65
round(c(25,18,22)/65,2)
round(c(49,15,4)/68,2)
inicial = 137304
rendimento = 0.009
mes1 <- inicial + (inicial*rendimento)
mes1
mes1-inicial
inicial = 137304
rendimento = 0.009
mes1 <- inicial + (inicial*rendimento)
rendimento_mensal <- c(mes1)
meses=12*20
for (i in 1:meses) {
rendimento_mensal[i+1] <-
rendimento_mensal[i]+
(rendimento_mensal[i]*rendimento)
}
df <- data.frame(mes = 1:length(rendimento_mensal),
valor = rendimento_mensal)
df$mensal = c(0,diff(rendimento_mensal))
View(df)
20*12
28+20
exp( 1.454 )
exp( 1.17 +1.454 )
beta0=1.17
beta3=1.454
round(exp(beta0+beta3), 3)
22*50
22*60
22*100
22*200
22*250
22*210
22*220
22*225
22*230
(137953.82 * 230)/50
(137953.82 * 100)/50
50*22
(50*22)/137953.82
137953.82*0.008
137953.82*0.0079
inicial = 137953.82
rendimento = 0.0079
mes1 <- inicial + (inicial*rendimento)
mes1
137953.82 + 1100
inicial = 137953.82
rendimento = 0.0079
mes1 <- inicial + (inicial*rendimento)
rendimento_mensal <- c(mes1)
rendimento_mensal
meses=12*20
for (i in 1:meses) {
rendimento_mensal[i+1] <-
rendimento_mensal[i]+
(rendimento_mensal[i]*rendimento)
}
df <- data.frame(mes = 1:length(rendimento_mensal),
valor = rendimento_mensal)
df$mensal = c(0,diff(rendimento_mensal))
View(df)
10*1
10*12
12*20
inicial = 137953.82
rendimento = 0.0079
mes1 <- inicial + (inicial*rendimento)
rendimento_mensal <- c(mes1)
meses=12*30
for (i in 1:meses) {
rendimento_mensal[i+1] <-
rendimento_mensal[i]+
(rendimento_mensal[i]*rendimento)
}
df <- data.frame(mes = 1:length(rendimento_mensal),
valor = rendimento_mensal)
df$mensal = c(0,diff(rendimento_mensal))
View(df)
283/12
(283/12)+28
2024-1996
1000-387.65
1100-387.65
1080/30
36/12
inicial = 139353.82
rendimento = 0.0079
mes1 <- inicial + (inicial*rendimento)
rendimento_mensal <- c(mes1)
mes1
inicial = 139353.82
rendimento = 0.0079
mes1 <- inicial + (inicial*rendimento)
mes1
inicial*rendimento
inicial = 139353.82
rendimento = 0.0079
mes1 <- inicial + (inicial*rendimento)
rendimento_mensal <- c(mes1)
meses=12*30
for (i in 1:meses) {
rendimento_mensal[i+1] <-
rendimento_mensal[i]+
(rendimento_mensal[i]*rendimento)
}
df <- data.frame(mes = 1:length(rendimento_mensal),
valor = rendimento_mensal)
df$mensal = c(0,diff(rendimento_mensal))
View(df)
282/12
23.5+28
dbinom(1, size = 1, prob = 0.7)
rbinom(1, size = 1, prob = 0.7)
rbinom(10, size = 1, prob = 0.7)
bateria <- rbinom(10, size = 1, prob = 0.7)
sum(bateria)
sum(bateria)/10
bateria <- rbinom(10, size = 1, prob = 0.7)
sucesso <- sum(bateria)/10
sucesso
fracasso <- 1-sucesso
fracasso
data.frame(sucesso = sucesso,
fracasso = fracasso)
runif(1, min=-1, max=1)
runif(10, min=-1, max=1)
rnunif(100,-10,10)
runif(100,-10,10)
round(runif(100,-10,10))
x <- round(runif(100,-10,10))
table(x)
prop.table(table(x))
probs <- prop.table(table(x))
sample(-10:10, size = 1, replace = T, prob = probs)
sample(-10:10, size = 100, replace = T, prob = probs)
x2 <- sample(-10:10, size = 100, replace = T, prob = probs)
prop.table(table(x2))
data.frame(probs,
prop.table(table(x2)))
prop.table(table(x2))
probs2 <- prop.table(table(x2))
data.frame(probs,
probs2)
probs
probs2
sample(1, 70, replace = F)
sample(1, 70, replace = T)
sample(1:70, 10, replace = F)
setwd("~/CE009CE24")
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
setwd("~/CE009CS24")
rmarkdown::render_site()
rmarkdown::render_site()
setwd("~/CE009CS24")
rmarkdown::render_site()
posicao <- function(vetor){
table <- data.frame(n = sum(!is.na(vetor)),
Minimo = quantile(vetor, na.rm = T)[1],
Quartil_1 = quantile(vetor, na.rm = T)[2],
Media = mean(vetor, na.rm = T),
Mediana = quantile(vetor, na.rm = T)[3],
Quartil_3 = quantile(vetor, na.rm = T)[4],
Maximo = quantile(vetor, na.rm = T)[5])
row.names(table) <- NULL
names(table) <- c('n', 'Mínimo', 'Q1', 'Média', 'Mediana', 'Q3', 'Máximo')
table
}
dispersao <- function(vetor){
table <- data.frame(Amplitude = diff(range(vetor, na.rm = T)),
Variancia = var(vetor, na.rm = T),
Desvio_padrao = sd(vetor, na.rm = T)#,
#Coef_variacao = 100*sd(vetor)/mean(vetor)
)
names(table) <- c('Amplitude', 'Variância', 'Desvio padrão')
table
}
notas <- readxl::read_xls('notas-chamada.xls')
notas$`PROVA 1` <- as.numeric(notas$`PROVA 1`)
notas$`PROVA 2` <- as.numeric(notas$`PROVA 2`)
notas$`PROVA 3` <- as.numeric(notas$`PROVA 3`)
notas$`REMOTA 1` <- as.numeric(notas$`REMOTA 1`)
notas$`REMOTA 2` <- as.numeric(notas$`REMOTA 2`)
notas$`REMOTA 3` <- as.numeric(notas$`REMOTA 3`)
notas$`REMOTA 4` <- as.numeric(notas$`REMOTA 4`)
notas$`REMOTA 5` <- as.numeric(notas$`REMOTA 5`)
notas$`MÉDIA REMOTAS` <- rowSums(notas[,c('REMOTA 1',
'REMOTA 2',
'REMOTA 3',
'REMOTA 4',
'REMOTA 5')]) /5
soma_parciais <- rowSums(notas[,c('PROVA 1',
'PROVA 2',
'PROVA 3',
'MÉDIA REMOTAS')],
na.rm = T)
menor_parcial <- pmin(
ifelse(is.na(notas$`PROVA 1`),0, notas$`PROVA 1`),
ifelse(is.na(notas$`PROVA 2`),0, notas$`PROVA 2`),
ifelse(is.na(notas$`PROVA 3`),0, notas$`PROVA 3`),
notas$`MÉDIA REMOTAS`,
na.rm = T)
pre_exame <- round((soma_parciais-menor_parcial)/3, 1)
notas$`NOTAS PRÉ EXAME` <- pre_exame
notas$`SITUAÇÃO PRÉ EXAME` <-
ifelse(notas$`NOTAS PRÉ EXAME` >= 7,
"APROVADO",
ifelse(notas$`NOTAS PRÉ EXAME` < 4,
"REPROVADO",
"EXAME"))
notas$`NOTAS FINAIS` <-
ifelse(notas$`SITUAÇÃO PRÉ EXAME` == 'EXAME',
ifelse(is.na(notas$EXAME),
notas$`NOTAS PRÉ EXAME`/2,
round((notas$`NOTAS PRÉ EXAME`+ notas$EXAME)/2, 2)),
notas$`NOTAS PRÉ EXAME`)
notas$`SITUAÇÃO FINAL` <-
ifelse(notas$`NOTAS FINAIS` >= 5,
"APROVADO",
"REPROVADO")
DT::datatable(notas[,c('GRR',
'FALTAS'#,
#'PROVA 1',
#'PROVA 2',
#'PROVA 3',
#'PROVA 4',
#'REMOTA 1',
#'REMOTA 2',
#'REMOTA 3',
#'REMOTA 4',
#'TRABALHO 1',
#'TRABALHO 2',
#"NOTAS PRÉ EXAME",
#"SITUAÇÃO PRÉ EXAME"
#"EXAME",
#"NOTAS FINAIS",
#"SITUAÇÃO FINAL"
)],
class = 'cell-border stripe',
rownames = F,
#filter = 'top',
editable = T
)
datas1 <- stringr::str_remove(names(notas)[15:(length(names(notas))-5)],
"'")
datas2 <- stringr::str_remove(datas1, c("'"))
datas2
datas1 <- stringr::str_remove(names(notas)[15:(length(names(notas))-5)],
"'")
datas1
datas1 <- stringr::str_remove(names(notas)[13:(length(names(notas))-5)],
"'")
datas1
datas2 <- stringr::str_remove(datas1, c("'"))
datas2
datas <- lubridate::dmy(datas2)
presencas <- colSums(is.na(notas[,13:(length(names(notas))-5)]))
presencas <- data.frame(datas = datas,
presencas = presencas)
pander::pander(posicao(subset(presencas, datas <= lubridate::today())$presencas))
pander::pander(dispersao(subset(presencas, datas <= lubridate::today())$presencas))
library(ggplot2)
library(ggpubr)
ggplot(data = subset(presencas, datas <= lubridate::today()),
aes(x=datas, y=presencas)) +
geom_line() +
geom_point() +
geom_smooth() +
geom_hline(yintercept = 81,
lwd = 1.5,
col = 2,
lty = 2) +
ylab("Nº de presentes") +
xlab("Data") +
ylim(c(0,81))+
ggtitle("Série de presenças")+
theme_classic() +
theme(legend.position = 'none',
plot.title = element_text(family = "Helvetica",
face = "bold",
size = (20),
hjust = 0),
axis.title = element_text(face = "bold",
size = 15),
text = element_text(size=15))
rmarkdown::render_site()
datas1 <- stringr::str_remove(names(notas)[13:(length(names(notas))-5)],
"'")
datas2 <- stringr::str_remove(datas1, c("'"))
datas <- lubridate::dmy(datas2)
presencas <- colSums(is.na(notas[,13:(length(names(notas))-5)]))
presencas <- data.frame(datas = datas,
presencas = presencas)
pander::pander(posicao(subset(presencas, datas <= lubridate::today())$presencas))
pander::pander(dispersao(subset(presencas, datas <= lubridate::today())$presencas))
pander::pander(posicao(subset(presencas, datas <= lubridate::today())$presencas))
rmarkdown::render_site()
rmarkdown::render_site()
