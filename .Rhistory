# Faces
faces <- 1:6
#-----------------------------------------------------------------------
# Número de lançamentos
n_lancamentos <- 3500
## Dado honesto
lancamentos <- sample(faces,
n_lancamentos,
replace = TRUE)
#-----------------------------------------------------------------------
# Organizando resultados
resultados <- data.frame(tentativa = 1:n_lancamentos,
resultado = lancamentos)
resultados$face1 <- cumsum(ifelse(resultados$resultado == 1,1,0))/resultados$tentativa
resultados$face2 <- cumsum(ifelse(resultados$resultado == 2,1,0))/resultados$tentativa
resultados$face3 <- cumsum(ifelse(resultados$resultado == 3,1,0))/resultados$tentativa
resultados$face4 <- cumsum(ifelse(resultados$resultado == 4,1,0))/resultados$tentativa
resultados$face5 <- cumsum(ifelse(resultados$resultado == 5,1,0))/resultados$tentativa
resultados$face6 <- cumsum(ifelse(resultados$resultado == 6,1,0))/resultados$tentativa
legenda <- c("1" = 2,
"2" = 3,
"3" = 4,
"4" = 5,
"5" = 6,
"6" = 7)
#-----------------------------------------------------------------------
# Plotando os resultados
ggplot(resultados, aes(x = tentativa)) +
geom_line(aes(y = face1, color = "1"), size = 1) +
geom_line(aes(y = face2, color = "2"), size = 1) +
geom_line(aes(y = face3, color = "3"), size = 1) +
geom_line(aes(y = face4, color = "4"), size = 1) +
geom_line(aes(y = face5, color = "5"), size = 1) +
geom_line(aes(y = face6, color = "6"), size = 1) +
geom_hline(yintercept=1/6,
linetype="dashed", color = "black") +
ylim(0,1) +
#transition_reveal(tentativa) +
labs(x = "Lançamentos",
y = "Freq. Relativa",
color = "") +
scale_color_manual(values = legenda)+
theme_bw() +
theme(legend.position='top',
legend.justification='left',
legend.direction='horizontal') +
ggtitle("Dado")
#-----------------------------------------------------------------------
# Comparando as frequências relativas com as probabilidades esperadas
resultados[nrow(resultados),]
#-----------------------------------------------------------------------
# Plotando os resultados
ggplot(resultados, aes(x = tentativa)) +
geom_line(aes(y = face1, color = "1"), size = 1) +
geom_line(aes(y = face2, color = "2"), size = 1) +
geom_line(aes(y = face3, color = "3"), size = 1) +
geom_line(aes(y = face4, color = "4"), size = 1) +
geom_line(aes(y = face5, color = "5"), size = 1) +
geom_line(aes(y = face6, color = "6"), size = 1) +
geom_hline(yintercept=1/6,
linetype="dashed", color = "black") +
ylim(0,1) +
transition_reveal(tentativa) +
labs(x = "Lançamentos",
y = "Freq. Relativa",
color = "") +
scale_color_manual(values = legenda)+
theme_bw() +
theme(legend.position='top',
legend.justification='left',
legend.direction='horizontal') +
ggtitle("Dado")
y=rnorm(100)
x=rnorm(100)
y=(2*x)+1+runif(1)
plot(y~x)
runif(1)
runif(1)
runif(1)
runif(1)
runif(1)
x=rnorm(100)
y=(2*x)+1+runif(1)
plot(y~x)
x=rnorm(100,50,9)
error=rnorm(100,0,16)
y=150-(4*x)+error
plot(y~x)
x=rnorm(100)
error=rnorm(100)
y=150-(4*x)+error
x=rnorm(100)
error=rnorm(100)
x
error
y=150-(4*x)+error
plot(y~x)
x=rnorm(100)
error=rnorm(100)
y=150+(4*x)+error
plot(y~x)
# trazendo os dados para a mesma escala
scale(x)
scale(y)
# trazendo os dados para a mesma escala
x_norm <- scale(x)
y_norm <- scale(y)
# rodando k-means
kmeans(x_norm, y_norm, 2)
# rodando k-means
kmeans(x_norm, y_norm, 2, 100)
# rodando k-means
?kmeans(x_norm, y_norm, 2, 100)
# gerando dados
x=rnorm(100)
library(factoextra)
# gerando dados
x=rnorm(100)
error=rnorm(100)
y=150+(4*x)+error
dados <- data.frame(x, y)
# gráfico
plot(y~x, data = dados)
scale(dados)
# rodando k-means
kmeans(scale(dados), centers = 2)
install.packages("factoextra")
# rodando k-means
agrupamento <- kmeans(scale(dados), centers = 2)
# plotando
library(factoextra)
fviz_cluster(agrupamento,
data = dados,
palette = c("#2E9FDF", "#E7B800"),
geom = "point",
ellipse.type = "convex",
ggtheme = theme_bw()
)
# adicionando agrupamentos no dataframe
dados
# plotando
library(factoextra)
# adicionando agrupamentos no dataframe
agrupamento
# adicionando agrupamentos no dataframe
agrupamento$cluster
# adicionando agrupamentos no dataframe
dados$grupo <- agrupamento$cluster
# plotando
library(factoextra)
fviz_cluster(agrupamento,
data = dados,
palette = c("#2E9FDF", "#E7B800"),
geom = "point",
ellipse.type = "convex",
ggtheme = theme_bw()
)
# gerando dados
x=rnorm(100)
error=rnorm(100)
y=150+(4*x)+error
dados <- data.frame(x, y)
# gráfico
plot(y~x, data = dados)
# rodando k-means
agrupamento <- kmeans(scale(dados), centers = 2)
# adicionando agrupamentos no dataframe
dados$grupo <- agrupamento$cluster
# plotando
library(factoextra)
# gerando dados
x=rnorm(100)
error=rnorm(100)
y=150+(4*x)+error
dados <- data.frame(x, y)
# gráfico
plot(y~x, data = dados)
# rodando k-means
agrupamento <- kmeans(scale(dados), centers = 2)
# plotando
library(factoextra)
fviz_cluster(agrupamento,
data = dados,
palette = c("#2E9FDF", "#E7B800"),
geom = "point",
ellipse.type = "convex",
ggtheme = theme_bw()
)
# adicionando agrupamentos no dataframe
dados$grupo <- agrupamento$cluster
# selecionando apenas elementos do grupo 2
subset(dados, grupo == 2)
fviz_cluster(agrupamento,
data = dados,
#palette = c("#2E9FDF", "#E7B800"),
geom = "point",
ellipse.type = "convex",
ggtheme = theme_bw()
)
# gerando dados
x=rnorm(100)
error=rnorm(100)
y=150+(4*x)+error
dados <- data.frame(x, y)
# gráfico
plot(y~x, data = dados)
# rodando k-means
agrupamento <- kmeans(scale(dados), centers = 2)
# plotando
library(factoextra)
fviz_cluster(agrupamento,
data = dados,
#palette = c("#2E9FDF", "#E7B800"),
geom = "point",
ellipse.type = "convex",
ggtheme = theme_bw()
)
# adicionando agrupamentos no dataframe
dados$grupo <- agrupamento$cluster
# selecionando apenas elementos do grupo 2
subset(dados, grupo == 2)
?fviz_cluster(agrupamento,
data = dados,
#palette = c("#2E9FDF", "#E7B800"),
geom = "point",
ellipse.type = "convex",
ggtheme = theme_bw()
)
fviz_cluster(agrupamento,
data = dados,
#palette = c("#2E9FDF", "#E7B800"),
geom = "point",
ellipse.type = "norm",
ggtheme = theme_bw()
)
# gerando dados
x=rnorm(100)
error=rnorm(100)
y=150+(4*x)+error
dados <- data.frame(x, y)
# gráfico
plot(y~x, data = dados)
# rodando k-means
agrupamento <- kmeans(scale(dados), centers = 2)
# plotando
library(factoextra)
fviz_cluster(agrupamento,
data = dados,
#palette = c("#2E9FDF", "#E7B800"),
geom = "point",
ellipse.type = "norm",
ggtheme = theme_bw()
)
fviz_cluster(agrupamento,
data = dados,
#palette = c("#2E9FDF", "#E7B800"),
geom = "point",
ellipse.type = "t",
ggtheme = theme_bw()
)
fviz_cluster(agrupamento,
data = dados,
#palette = c("#2E9FDF", "#E7B800"),
geom = "point",
ellipse.type = "euclid",
ggtheme = theme_bw()
)
fviz_cluster(agrupamento,
data = dados,
#palette = c("#2E9FDF", "#E7B800"),
geom = "point",
ellipse.type = "convex",
ggtheme = theme_bw()
)
#----------------------------------------------------------------------
# plotando
library(factoextra) #instalar!
#----------------------------------------------------------------------
# Agrupamento k-means para k=2 com duas variáveis
#----------------------------------------------------------------------
# Gerando dados
x=rnorm(100)
error=rnorm(100)
y=150+(4*x)+error
dados <- data.frame(x, y)
# Gerando dados
x=rnorm(100)
error=rnorm(100)
y=150+(4*x)+error
dados <- data.frame(x, y)
# Gráfico de dispersão
plot(y~x, data = dados)
dados
View(dados)
head(dados)
# Gráfico de dispersão
plot(y~x, data = dados)
# Rodando k-means
agrupamento <- kmeans(scale(dados), centers = 2)
# Plotando agrupamentos
library(factoextra) #instalar!
fviz_cluster(agrupamento,
data = dados,
#palette = c("#2E9FDF", "#E7B800"),
geom = "point",
ellipse.type = "convex",
ggtheme = theme_bw()
)
# Adicionando agrupamentos no dataframe
dados$grupo <- agrupamento$cluster
# Selecionando apenas elementos do grupo 2
subset(dados, grupo == 2)
fviz_cluster(1,
data = dados,
#palette = c("#2E9FDF", "#E7B800"),
geom = "point",
ellipse.type = "convex",
ggtheme = theme_bw()
)
agrupamento
1184.80+2369.59
3500+4500+2000
4556.92+2369.59
4556.92+2369.59-1100
5800+2300
8100-3000
15000+145000
15000+145000+3300
inicial = 163000
rendimento = 0.007
mes1 <- inicial + (inicial*rendimento)
rendimento_mensal <- c(mes1)
aporte_mensal=1000
meses=12*23
for (i in 1:meses) {
rendimento_mensal[i+1] <-
rendimento_mensal[i]+
(rendimento_mensal[i]*rendimento)+aporte_mensal
}
df <- data.frame(mes = 1:length(rendimento_mensal),
valor = rendimento_mensal)
df$mensal = c(0,diff(rendimento_mensal))
View(df)
meses=12*15
for (i in 1:meses) {
rendimento_mensal[i+1] <-
rendimento_mensal[i]+
(rendimento_mensal[i]*rendimento)+aporte_mensal
}
df <- data.frame(mes = 1:length(rendimento_mensal),
valor = rendimento_mensal)
df$mensal = c(0,diff(rendimento_mensal))
View(df)
223/12
inicial = 163000
rendimento = 0.007
mes1 <- inicial + (inicial*rendimento)
rendimento_mensal <- c(mes1)
aporte_mensal=1000
meses=12*15
for (i in 1:meses) {
rendimento_mensal[i+1] <-
rendimento_mensal[i]+
(rendimento_mensal[i]*rendimento)+aporte_mensal
}
df <- data.frame(mes = 1:length(rendimento_mensal),
valor = rendimento_mensal)
df$mensal = c(0,diff(rendimento_mensal))
View(df)
inicial = 163000
rendimento = 0.007
mes1 <- inicial + (inicial*rendimento)
rendimento_mensal <- c(mes1)
aporte_mensal=1000
meses=12*18
for (i in 1:meses) {
rendimento_mensal[i+1] <-
rendimento_mensal[i]+
(rendimento_mensal[i]*rendimento)+aporte_mensal
}
df <- data.frame(mes = 1:length(rendimento_mensal),
valor = rendimento_mensal)
df$mensal = c(0,diff(rendimento_mensal))
View(df)
inicial = 163000
rendimento = 0.007
mes1 <- inicial + (inicial*rendimento)
rendimento_mensal <- c(mes1)
aporte_mensal=1000
meses=12*19
for (i in 1:meses) {
rendimento_mensal[i+1] <-
rendimento_mensal[i]+
(rendimento_mensal[i]*rendimento)+aporte_mensal
}
df <- data.frame(mes = 1:length(rendimento_mensal),
valor = rendimento_mensal)
df$mensal = c(0,diff(rendimento_mensal))
View(df)
223/12
28+19
irmaos <- c(2,
3,
8,
3,
4,
0,
2,
2,
1,
0)
sd(irmaos)
(8-2.5)/2.32
(2.32/2.35)*100
(2.32/2.5)*100
irmaos <- c(2,
3,
8,
3,
4,
0,
2,
2,
1,
0)
sd(irmaos)
(8-2.5)/2.32
tempo <- c(30,
110,
150,
25,
45,
30,
60,
60,
10,
30)
plot(irmaos~tempo, pch=19)
tempo <- c(30,
110,
150,
25,
45,
30,
60,
60,
10,
30)
plot(irmaos~tempo, pch=19)
abline(lm(irmaos~tempo, pch=19), col = 2, lwd = 2)
cor(irmaos,tempo)
table(irmaos, tempo)
esc <- c('Ensino superior',
'Ensino médio',
'Ensino médio',
'Mestrado',
'Ensino superior',
'Ensino médio',
'Ensino superior Outro Estado',
'Ensino superior Interior do Paraná',
'Ensino médio Outro Estado',
'Mestrado Outro Estado')
reg <- c('Curitiba',
'Região metropolitana',
'Curitiba',
'Curitiba',
'Curitiba',
'Curitiba',
'Outro Estado',
'Interior do Paraná',
'Outro Estado',
'Outro Estado')
table(esc,reg)
tabela <- table(esc,reg)
chisq.test(tabela)
setwd("~/CE009CS24")
rmarkdown::render_site()
inicial = 163000
rendimento = 0.007
mes1 <- inicial + (inicial*rendimento)
mes1
inicial = 145
rendimento = 0.007
mes1 <- inicial + (inicial*rendimento)
rendimento_mensal <- c(mes1)
aporte_mensal=1000
meses=12*19
for (i in 1:meses) {
rendimento_mensal[i+1] <-
rendimento_mensal[i]+
(rendimento_mensal[i]*rendimento)+aporte_mensal
}
df <- data.frame(mes = 1:length(rendimento_mensal),
valor = rendimento_mensal)
df$mensal = c(0,diff(rendimento_mensal))
View(df)
inicial = 145
rendimento = 0.007
mes1 <- inicial + (inicial*rendimento)
rendimento_mensal <- c(mes1)
aporte_mensal=1500
meses=12*19
for (i in 1:meses) {
rendimento_mensal[i+1] <-
rendimento_mensal[i]+
(rendimento_mensal[i]*rendimento)+aporte_mensal
}
df <- data.frame(mes = 1:length(rendimento_mensal),
valor = rendimento_mensal)
df$mensal = c(0,diff(rendimento_mensal))
View(df)
5666.64/as.numeric((lubridate::today() - as.Date("2024-01-18")))
